<UserControl x:Class="Perceptron.MVVM.View.ImageInputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:view="clr-namespace:Perceptron.MVVM.View"
             mc:Ignorable="d" 
             xmlns:latex="clr-namespace:WpfMath.Controls;assembly=WpfMath"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:viewModel="clr-namespace:Perceptron.MVVM.ViewModel"
             xmlns:converter="clr-namespace:Perceptron.MVVM.Converters"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:BoolToColorConverter x:Key="BoolToColorConverter" />
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <DataTemplate DataType="{x:Type viewModel:InputNodeViewModel}">
            <TextBox
                Style="{StaticResource InputBox}"
                     Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                     Foreground="{Binding IsNumeric, Converter={StaticResource BoolToColorConverter}, ConverterParameter={StaticResource BlackColor}}">
            </TextBox>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:EdgeViewModel}">
            <view:CurvedEdge MaxArcRadius="12" StrokeThickness="2" Source="{Binding Source}" Sink="{Binding Sink}">
                <view:CurvedEdge.Stroke>
                    <SolidColorBrush Color="{StaticResource NodeColor}" />
                </view:CurvedEdge.Stroke>
            </view:CurvedEdge>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:OutputNodeViewModel}">
            <TextBox Text="{Binding Output, ValidatesOnDataErrors=True, TargetNullValue='', Mode=OneWay}"
                     Style="{StaticResource OutputNode}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:PlusNodeViewModel}">
            <Button IsEnabled="{Binding IsEnabled}" Content="+" Style="{StaticResource PlusButton}" Command="{Binding AddCommand}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:DesiredOutputViewModel}">
            <CheckBox IsChecked="{Binding Input}" Visibility="{Binding Visibility}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ImageInputBoxViewModel}">
            <StackPanel Canvas.Left="50" Canvas.Top="100">
                <Image Source="{Binding Image}" Width="200" Height="200" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <UniformGrid Margin="0,2,0,0" Rows="2" Columns="2" VerticalAlignment="Stretch">
                    <Button Style="{StaticResource RectButton}" Command="{Binding PictureCommand}">Load Picture</Button>
                    <Button Command="{Binding MnistCommand}" Content="Load MNIST">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource RectButton}">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger> 
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </UniformGrid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:BraceViewModel}">
            <latex:FormulaControl Canvas.Left="300" Canvas.Top="160" Formula="\}" Scale="160" Foreground="White"/>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="Input (28x28 picture)"
                           Grid.Column="0"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
            <TextBlock Text="Bias"
                           Grid.Column="2"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
            <TextBlock Text="Output"
                           Grid.Column="3"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
            <StackPanel
                
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                 Orientation="Horizontal" Grid.Row="0" Grid.Column="4">
                <TextBlock VerticalAlignment="Center" Text="Training"
                           Grid.Column="4"
                           Grid.Row="0"
                           Foreground="White"
                           FontSize="16"/>
                <ToggleButton x:Name="Toggle" IsChecked="{Binding Training}" Style="{StaticResource ToggleButton}" Margin="10,5,0,0" Width="30" />
                <StackPanel Visibility="{Binding IsChecked, ElementName=Toggle, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Margin="10,0,0,0" >
                    <TextBlock Foreground="White" FontSize="9">Exclusivity</TextBlock>
                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Exclusivity, Mode=OneWayToSource}"/>
                </StackPanel>
                <StackPanel Visibility="{Binding IsChecked, ElementName=Toggle, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Margin="10,0,0,0" >
                    <TextBlock Foreground="White" FontSize="9">Batch</TextBlock>
                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Batch, Mode=OneWayToSource}"/>
                </StackPanel>
            </StackPanel>
            
            <ItemsControl  Grid.Column="0"
                    Grid.Row="1"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="5"
                              ItemsSource="{Binding Path=GraphItems}"
                     x:Name="Graph">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SizeChanged">
                        <i:InvokeCommandAction x:Name="test1" Command="{Binding SetWidthCommand}"
                                       CommandParameter="{Binding Path=ActualWidth, ElementName=Graph}"/>
                        <i:InvokeCommandAction x:Name="test2" Command="{Binding GraphRedrawCommand}"
                                       CommandParameter="{Binding Path=ActualHeight, ElementName=Graph}" Changed="test1_Changed"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
            
            <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button Content="Next" Style="{StaticResource NextButton}" Command="{Binding NextCommand}" ToolTip="Next image"></Button>
                    <Button Content="Clear" Style="{StaticResource ClearButton}" Command="{Binding ClearCommand}" ToolTip="Clear"></Button>
                    <Button Content="Randomize"  Style="{StaticResource RandomizeButton}" Command="{Binding RandomCommand}" ToolTip="Rendom input"></Button>
                </StackPanel>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button Content="Step1" Style="{StaticResource Step1Button}" Command="{Binding Step1Command}" ToolTip="Step 1"></Button>
                    <Button Content="Step2" Style="{StaticResource Step2Button}" Command="{Binding Step2Command}" ToolTip="Step 2"></Button>
                    <Button Content="Step3" Style="{StaticResource Step3Button}" Command="{Binding Step3Command}" ToolTip="Step 3"></Button>
                </StackPanel>

                <StackPanel Grid.Column="2"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button Content="Save" Style="{StaticResource SaveButton}" Command="{Binding SaveCommand}"></Button>
                    <Button Content="Load" Style="{StaticResource LoadButton}" Command="{Binding LoadCommand}"></Button>
                </StackPanel>
            </Grid>
        </Grid>

        <ContentControl Content="{Binding TrainingBox}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left">
            <ContentControl.ContentTemplate>
                <DataTemplate>
                    <view:LongTrainingView/>
                </DataTemplate>
            </ContentControl.ContentTemplate>
        </ContentControl>
    </Grid>
</UserControl>

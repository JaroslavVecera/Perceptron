<UserControl x:Class="Perceptron.MVVM.View.DirectInputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Perceptron.MVVM.View"
             xmlns:view="clr-namespace:Perceptron.MVVM.View"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:viewModel="clr-namespace:Perceptron.MVVM.ViewModel"
             xmlns:converter="clr-namespace:Perceptron.MVVM.Converters"
             xmlns:latex="clr-namespace:WpfMath.Controls;assembly=WpfMath"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Name="InputView">
    <UserControl.Resources>
        <converter:BoolToColorConverter x:Key="BoolToColorConverter" />
        <DataTemplate DataType="{x:Type viewModel:InputNodeViewModel}">
            <TextBox
                Style="{StaticResource InputBox}"
                     Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                     Foreground="{Binding IsNumeric, Converter={StaticResource BoolToColorConverter}, ConverterParameter={StaticResource BlackColor}}">
            </TextBox>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:EdgeViewModel}">
            <view:CurvedEdge MaxArcRadius="12" StrokeThickness="2" Source="{Binding Source}" Sink="{Binding Sink}">
                <view:CurvedEdge.Stroke>
                    <SolidColorBrush Color="{StaticResource NodeColor}" />
                </view:CurvedEdge.Stroke>
            </view:CurvedEdge>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:SumNodeViewModel}">
            <view:SumNodeView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:OutputNodeViewModel}">
            <TextBox Text="{Binding Output, ValidatesOnDataErrors=True, TargetNullValue='', Mode=OneWay}"
                     Style="{StaticResource OutputNode}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:WeightViewModel}">
            <TextBox Foreground="{Binding IsNumeric, Converter={StaticResource BoolToColorConverter}, ConverterParameter={StaticResource WhiteColor}}"
                     Text="{Binding Weight, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource Weight}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:PlusNodeViewModel}">
            <Button IsEnabled="{Binding IsEnabled}" Content="+" Style="{StaticResource PlusButton}" Command="{Binding AddCommand}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:TrainingViewModel}">
            <view:TrainingView HorizontalAlignment="Center" />
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="140" />
            </Grid.RowDefinitions>

            <Grid Name="Graph">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SizeChanged">
                        <i:InvokeCommandAction x:Name="test1" Command="{Binding SetWidthCommand}"
                                       CommandParameter="{Binding Path=ActualWidth, ElementName=Graph}"/>
                        <i:InvokeCommandAction x:Name="test2" Command="{Binding GraphRedrawCommand}"
                                       CommandParameter="{Binding Path=ActualHeight, ElementName=Graph}" Changed="test1_Changed"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="Input"
                           Grid.Column="0"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
                <TextBlock Text="Weights"
                           Grid.Column="1"
                           Grid.Row="0"
                           Margin="0,0,50,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
                <TextBlock Text="Sum | Bias"
                           Grid.Column="2"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
                <TextBlock Text="Output"
                           Grid.Column="3"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
                <TextBlock Text="Training"
                           Grid.Column="4"
                           Grid.Row="0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"/>
                <ItemsControl Grid.ColumnSpan="5"
                              Grid.Row="1"
                              ItemsSource="{Binding Path=GraphItems}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,0,100">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button Content="Clear" Style="{StaticResource ClearButton}" Command="{Binding ClearCommand}" ToolTip="Clear"></Button>
                    <Button Content="Randomize"  Style="{StaticResource RandomizeButton}" Command="{Binding RandomCommand}" ToolTip="Rendom input"></Button>
                </StackPanel>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button IsEnabled="True" Content="Step1" Style="{StaticResource Step1Button}" Command="{Binding Step1Command}" ToolTip="Step 1"></Button>
                    <Button IsEnabled="True" Content="Step2" Style="{StaticResource Step2Button}" Command="{Binding Step2Command}" ToolTip="Step 2"></Button>
                    <Button IsEnabled="True" Content="Step3" Style="{StaticResource Step3Button}" Command="{Binding Step3Command}" ToolTip="Step 3"></Button>
                </StackPanel>

                <StackPanel Grid.Column="2"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Button Content="Save" Style="{StaticResource SaveButton}" Command="{Binding SaveCommand}"></Button>
                    <Button Content="Load" Style="{StaticResource LoadButton}" Command="{Binding LoadCommand}"></Button>
                </StackPanel>
            </Grid>
        </Grid>

        <TextBlock Text="Description"
                           Grid.Column="1"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontSize="16"
                   Margin="0,15,0,0"/>

        <latex:FormulaControl Grid.Column="1"
                              Formula="{Binding Description}"
                              Foreground="White"
                              Margin="20,250,0,0"/>
    </Grid>
</UserControl>
